#!/bin/bash -eu
# -----------------------------------------------------------------------------------------------
# SYSTEM-INDEPENDENT INTERACTIVE SHELL SETTINGS
# -----------------------------------------------------------------------------------------------
# ~/config/.bashrc_common
#
# Purpose: Interactive shell settings for UNIX-like systems. Intended to be universally
#   compatible with WSL, Debian derivatives (Ubuntu), Red Hat-based distros (Centos, Rock Linux),
#   MinGW (MSYS, GitBash), Cygwin, PGI Bash, etc.
#
# Note: this file must use UNIX line endings (LF)!
#
# Jan 2021 JCL
#
# -----------------------------------------------------------------------------------------------

# check if VB is unset or null
if [ -z ${VB:+dummy} ]; then
    export VB=false
else
    # check if VB is true
    if [ "${VB}" = true ]; then
        # load formatting
        fpretty=${HOME}/config/.bashrc_pretty
        if [ -e $fpretty ]; then
            source $fpretty            
            print_ribbon
            if [[ "$-" == *i* ]]; then
                # determine if being sourced or executed
                if (return 0 2>/dev/null); then
                    RUN_TYPE="sourcing"
                else
                    RUN_TYPE="executing"
                fi
                print_source
            fi
        fi
    fi
fi

# Command History
# -----------------
# history length (commands to save)
export HISTFILESIZE=
export HISTSIZE=
# Don't put duplicate lines in the history
export HISTCONTROL=ignoredups
# commands to ignore
export HISTIGNORE=$'exit'
# append to the history file, don't overwrite it
shopt -s histappend
# append history after every command (real time history)
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"
# Timestamp history
HISTTIMEFORMAT="%F %T "

# Editors
# --------
alias e='emacs'
alias en='emacs -nw'

export EDITOR='emacs -nw'
export GIT_EDITOR='emacs -nw'
export SVN_EDITOR=emacs
set -o emacs

# Pagers
# -------
# add syntax highlighting to less, etc
# git clone https://github.com/Lindydancer/e2ansi.git
# git clone https://github.com/Lindydancer/face-explorer.git

# define file names
rep_dir="${HOME}/downloads/git"
fface="${rep_dir}/face-explorer/face-explorer.el"
fe2ansi="${rep_dir}/e2ansi/bin/e2ansi-cat"
fsilent="${rep_dir}/e2ansi/e2ansi-silent.el"
femacs="${HOME}/config/emacs_all.el"
# define options
emacs_args="-Q --batch -l $fsilent -l $femacs -l $fface -l $fe2ansi"
e2ansi_args="--theme misterioso"
if [ -f $fface ] && [ -f $fe2ansi ]; then
    vecho -n "${TAB}configuring e2ansi..."
    export "LESSOPEN=|emacs $emacs_args $e2ansi_args %s"
    export "LESS=-RF --mouse --wheel-lines=3"
    alias cat='less -EX 2>/dev/null'  # redefine cat as less
    alias more='less -EX 2>/dev/null' # redefine more as less
    vecho "done"
fi

alias lessn='less -N' # add line numbers to less

# Aliases and Functions
# ----------------------
falias="${HOME}/config/.bash_aliases"
if [ -f $falias ]; then
    vecho "${TAB}loading ${falias}..."
    source $falias
fi

# Path additions
# ---------------
if [ "${VB}" = true ]; then
    echo "${TAB}Path additions..."
    itab
fi

# list paths to append to PATH
appPATH="${HOME}/bin"
if [ ! -z ${appPATH} ]; then
    for path in $appPATH; do
        if [[ ":$PATH" != *":${path}"* ]]; then
            if [ -d "${path}" ]; then
                vecho -n "${TAB} appending ${path} to PATH... "
                export PATH=$PATH:$path
                vecho "done"
            else
                echo -e "${TAB}${path} ${UL}not found${RESET}"
            fi
        else
            vecho "${TAB}${path} already in PATH"
        fi
    done
fi

# list paths to prepend to PATH
prePATH=""
if [ ! -z "${prePATH}" ]; then
    for path in $prePATH; do
        if [[ ":$PATH" != *":${path}"* ]]; then
            if [ -d "${path}" ]; then
                vecho -n "${TAB}prepending ${path} to PATH... "
                export PATH=$path:$PATH
                vecho "done"
            else
                echo -e "${TAB}${path} ${UL}not found${RESET}"
            fi
        else
            vecho "${TAB}${path} already in PATH"
        fi
    done
fi

# deallocate variables
unset appPATH
unset e2ansi_args
unset emacs_args
unset falias
unset fe2ansi
unset femacs
unset fface
unset fsilent
unset prePATH
unset rep_dir

if [ "${VB}" = true ]; then
    # reset tab
    dtab 2 # once for path, once for file
fi
