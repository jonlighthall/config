#!/bin/bash -eu

# set debug level
declare -i DEBUG=${DEBUG:=0} # default value if DEBUG is unset or null

function get_source() {
    # set local debug value
    local -i DEBUG=${DEBUG:-0} # substitute default value if DEBUG is unset or null
    
    # get canonical source name
    src_name=$(readlink -f ${BASH_SOURCE[1]})
    # get short source name
    src_base=$(basename "${src_name}")
    # get source path
    ##physical (canonical)
    export src_dir_phys=$(dirname "$src_name")
    ## logical (links)
    src_dir_logi=$(dirname "${BASH_SOURCE[1]}")
}

function print_source() {
    RUN_TYPE=${RUN_TYPE:-"running"}

    local -i ln=${#RUN_TYPE}
    local -i sp=$(($ln - 7))
    local spx=$(echo -ne "\E[${sp}C")    
    
    # print run type and source name
    vecho -e "${TAB}${RUN_TYPE} ${PSDIR}${BASH_SOURCE[1]}${RESET}..."
    if [ ! "${BASH_SOURCE[1]}" = "$src_name" ]; then
        vecho -e "${TAB}${spx}${VALID}link${RESET} -> $src_name"
    fi

    # print source path
    if [[ "${src_dir_logi}" != "${src_dir_phys}" ]]; then 
        ## logical
        vecho -e "${TAB}${spx}${gray}logi -> $src_dir_logi${RESET}"
        ## physical
        vecho -e "${TAB}${spx}${gray}phys -> $src_dir_phys${RESET}"
    fi
}

get_source

# load bash utils
for util in lib_links.sh \
                lib_colors.sh \
                lib_cond_echo.sh \
                lib_tabs.sh \
                lib_fmt.sh \
                lib_traps.sh
do
    # use the canonical (physical) source directory for reference; this is important if sourcing
    # this file directly from shell
    fname="${src_dir_phys}/${util}"
    if [ -e "${fname}" ]; then
        if [[ "$-" == *i* ]] && [ ${DEBUG:-0} -gt 0 ]; then
            echo "${TAB}loading $(basename ${fname})"
        fi
        source ${fname}
    else
        echo "${fname} not found"
    fi
done

decho "DEBUG = $DEBUG"

#set tab
set_tab
# print source
decho -e "${TAB}\x1b[7;38;5;132m${N_BASH}: this is ${src_base}\x1b[0m"

# determine if script is being sourced or executed and add conditional behavior
if (return 0 2>/dev/null); then
    :
else
    # exit on errors
    set -e
fi

# check if running interactively
if [[ "$-" == *i* ]]; then
    msg=$(echo "this file is ${src_base}!")
    ln=$(for ((i = 1; i <= ${#msg}; i++)); do echo -n "-"; done)
    decho -e "$ln\n$msg\n$ln" | sed "s/^/${TAB}/"

    # determine if script is being sourced or executed
    if (return 0 2>/dev/null); then
        RUN_TYPE="sourcing"
    else
        RUN_TYPE="executing"
    fi
    print_source

    # add read-only variable to check if this file has already been loaded
    if [ -z ${FPRETTY_LOADED+dummy} ]; then
        declare -grx FPRETTY_LOADED=true
    else
        decho -e "${TAB}${BASH_SOURCE[0]##*/} already loaded${RESET}"
    fi    
fi

